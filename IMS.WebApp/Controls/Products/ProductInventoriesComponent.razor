<div class="card">
    <div class="card-body">

<SearchAndDisplayInventoriesComponent
    OnInventorySelected="OnInventorySelected"
></SearchAndDisplayInventoriesComponent>
@if (this.Product.ProductInventories != null && this.Product.ProductInventories.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>Nome</th>
                <th>Quantidade</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach(var prodInventory in this.Product.ProductInventories)
            {
                <tr>
                    <td>
                        @prodInventory.Inventory?.InventoryName
                    </td>
                    <td>
                        <input type="number" min="0"@bind-value="prodInventory.InventoryQuantity"/>
                    </td>
                    <td>
                        <button
                            class="btn btn-link"
                            type="button"
                            @onclick="(() => RemoveInventory(prodInventory))">Remover
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

    </div>
</div>

@code {
    [Parameter]
    public Product Product { get; set; } = new Product();

    private void RemoveInventory(ProductInventory productInventory)
    {
        this.Product.ProductInventories.Remove ( productInventory );
    }

    private void OnInventorySelected(Inventory inventory)
    {
        this.Product.AddInventory(inventory);
    }

}

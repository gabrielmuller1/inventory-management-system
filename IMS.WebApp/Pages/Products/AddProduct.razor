@page "/addproduct"

@inject NavigationManager NavigationManager
@inject IAddProductUseCase AddProductUseCase

<h3>Adicionar Produto</h3>
<br/>
<EditForm Model="product" OnValidSubmit="SaveProduct">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group">
        <label for="name">Nome do Produto</label>
        <InputText id="name"
                   @bind-Value="product.ProductName"
                   class="form-control">

        </InputText>
    </div>

    <div class="form-group">
        <label for="quantity">Quantidade</label>
        <InputNumber id="quantity"
                     @bind-Value="product.Quantity"
                     class="form-control">

        </InputNumber>
    </div>

    <div class="form-group">
        <label for="price">Preço</label>
        <InputNumber id="price"
                     @bind-Value="product.Price"
                     class="form-control">

        </InputNumber>
    </div>
    <div class="form-group">
        <label for="invs">Items</label>
        <SearchAndDisplayInventoriesComponent></SearchAndDisplayInventoriesComponent>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Salvar</button>
    <button type="button" class="btn btn-primary" @onclick="Cancel">Cancelar</button>

</EditForm>

@code {
    private Product product = new Product();

    private async Task SaveProduct()
    {
        await AddProductUseCase.ExecuteAsync(product);
        NavigationManager.NavigateTo("/products");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/products");
    }


}

@page "/addinventory"

@inject IAddInventoryUseCase AddInventoryUseCase
@inject NavigationManager NavigationManager

<h3>Novo Item</h3>
<br/>
<EditForm Model="inventory" OnValidSubmit="SaveInventory">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group">
        <label for="name">Item</label>
        <InputText 
            id="name"
            @bind-Value="inventory.InventoryName" 
            class="form-control">

        </InputText>
    </div>

    <div class="form-group">
        <label for="quantity">Quantidade</label>
        <InputNumber id="quantity"
                   @bind-Value="inventory.Quantity"
                   class="form-control">

        </InputNumber>
    </div>

    <div class="form-group">
        <label for="price">Preço</label>
        <InputNumber id="price"
                     @bind-Value="inventory.Price"
                     class="form-control">

        </InputNumber>
    </div>
    <br/>
    <button type="submit" class="btn btn-primary">Salvar</button>
    <button type="button" class="btn btn-primary" @onclick="Cancel">Cancelar</button>
</EditForm>

@code {

        private Inventory inventory = new Inventory();

        private async Task SaveInventory()
        {
            await AddInventoryUseCase.ExecuteAsync(inventory);
            NavigationManager.NavigateTo("/inventories");
        }

        private void Cancel()
        {
            NavigationManager.NavigateTo ( "/inventories" );
        }

}
